# Generated by Django 5.2.7 on 2025-10-21 12:47

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('drifts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('version', models.CharField(max_length=50)),
                ('model_type', models.CharField(choices=[('classification', 'Classification'), ('regression', 'Regression'), ('clustering', 'Clustering')], max_length=20)),
                ('framework', models.CharField(choices=[('scikit-learn', 'Scikit-learn'), ('xgboost', 'XGBoost'), ('tensorflow', 'TensorFlow'), ('pytorch', 'PyTorch')], max_length=20)),
                ('artifact_path', models.CharField(help_text='Path to stored model artifacts', max_length=500)),
                ('features', models.JSONField(help_text='List of input features used by the model')),
                ('target_classes', models.JSONField(blank=True, help_text='Target classes for classification models', null=True)),
                ('metrics', models.JSONField(blank=True, default=dict, help_text='Performance metrics (accuracy, precision, recall, etc.)')),
                ('accuracy', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('training_data_size', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('trained_at', models.DateTimeField()),
                ('deployed_at', models.DateTimeField(blank=True, null=True)),
                ('hyperparameters', models.JSONField(blank=True, default=dict, help_text='Model hyperparameters')),
                ('feature_importance', models.JSONField(blank=True, default=dict, help_text='Feature importance scores')),
                ('cross_validation_scores', models.JSONField(blank=True, default=dict, help_text='Cross-validation results')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-deployed_at', '-trained_at'],
                'indexes': [models.Index(fields=['model_type', 'is_active'], name='ml_mlmodel_model_t_e64c40_idx'), models.Index(fields=['framework', 'deployed_at'], name='ml_mlmodel_framewo_206b39_idx')],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='DriftCauseAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cause_category', models.CharField(choices=[('emergency_fix', 'Emergency Fix'), ('manual_troubleshooting', 'Manual Troubleshooting'), ('security_response', 'Security Response'), ('configuration_error', 'Configuration Error'), ('automated_response', 'Automated Response'), ('unknown', 'Unknown Cause')], max_length=50)),
                ('confidence_score', models.DecimalField(decimal_places=2, help_text='Confidence in the cause analysis (0.0-1.0)', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('contributing_factors', models.JSONField(blank=True, default=list, help_text='Array of factor objects with evidence and weights')),
                ('temporal_context', models.JSONField(blank=True, default=dict, help_text='Time-based analysis (patterns, correlations)')),
                ('user_attribution', models.JSONField(blank=True, default=dict, help_text='Git commits, audit logs, user correlations')),
                ('ai_analysis_result', models.JSONField(blank=True, default=dict, help_text='Results from AI analysis (Gemini, etc.)')),
                ('natural_language_explanation', models.TextField(blank=True, help_text='Human-readable explanation of the cause')),
                ('analyzed_by', models.CharField(default='ml_model', help_text='Analysis method used (ml_model, ai_agent, human)', max_length=50)),
                ('analyzed_at', models.DateTimeField(auto_now_add=True)),
                ('drift_event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cause_analysis', to='drifts.driftevent')),
            ],
            options={
                'ordering': ['-analyzed_at'],
                'indexes': [models.Index(fields=['drift_event'], name='ml_driftcau_drift_e_759d3e_idx'), models.Index(fields=['cause_category', 'confidence_score'], name='ml_driftcau_cause_c_52936e_idx'), models.Index(fields=['analyzed_at'], name='ml_driftcau_analyze_20cf39_idx')],
            },
        ),
        migrations.CreateModel(
            name='MLPerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_date', models.DateField()),
                ('training_data_size', models.IntegerField()),
                ('training_time', models.DurationField(blank=True, null=True)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('precision_macro', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('recall_macro', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('f1_score_macro', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('confusion_matrix', models.JSONField(blank=True, default=dict, help_text='Confusion matrix data')),
                ('feature_importance', models.JSONField(blank=True, default=dict, help_text='Updated feature importance scores')),
                ('cross_validation_scores', models.JSONField(blank=True, default=dict, help_text='Cross-validation results')),
                ('model_drift_score', models.DecimalField(blank=True, decimal_places=4, help_text='Measure of model performance degradation', max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ml_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='ml.mlmodel')),
            ],
            options={
                'ordering': ['-evaluation_date'],
                'indexes': [models.Index(fields=['ml_model', 'evaluation_date'], name='ml_mlperfor_ml_mode_4103b6_idx'), models.Index(fields=['accuracy'], name='ml_mlperfor_accurac_2e30fa_idx')],
                'unique_together': {('ml_model', 'evaluation_date')},
            },
        ),
        migrations.CreateModel(
            name='MLPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_result', models.JSONField(help_text='Raw prediction results from the model')),
                ('predicted_class', models.CharField(blank=True, help_text='Predicted classification result', max_length=100, null=True)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=4, help_text='Confidence score of the prediction', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('prediction_metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata about the prediction')),
                ('processing_time', models.DurationField(blank=True, help_text='Time taken to generate prediction', null=True)),
                ('predicted_at', models.DateTimeField(auto_now_add=True)),
                ('drift_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_predictions', to='drifts.driftevent')),
                ('ml_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='ml.mlmodel')),
            ],
            options={
                'ordering': ['-predicted_at'],
                'indexes': [models.Index(fields=['drift_event', 'predicted_at'], name='ml_mlpredic_drift_e_35f1d3_idx'), models.Index(fields=['ml_model', 'predicted_at'], name='ml_mlpredic_ml_mode_baf812_idx'), models.Index(fields=['confidence_score'], name='ml_mlpredic_confide_502938_idx')],
            },
        ),
    ]
